% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treesurgeon.r
\name{sim_g_tree}
\alias{sim_g_tree}
\title{Simulate a tree under Gause's law}
\usage{
sim_g_tree(b, n = 100, t = 1000, ext = F, ext_t = NULL, ext_s = NULL)
}
\arguments{
\item{b}{a numeric value between 0 and 1. The probability of speciation per extant lineage per generation.}

\item{n}{numeric. The desired number of species to simulate.}

\item{t}{numeric. The desired number of generations to simulate.}

\item{ext}{logical. If T, simulate a mass extinction event.}

\item{ext_t}{numeric. The desired generation in which to simulate a mass extinction.}

\item{ext_s}{numeric. The severity of the mass extinction between 0 and 1.}
}
\value{
An object of class 'phylo'.
}
\description{
Function to simulate a tree under the assumption of competitive exclusion (Gause's law).
}
\details{
This function simulates an evolutionary process in discrete time under the assumption of competitive exclusion (Gause's law). The progenitor species starts with an integer value = 0, which represents the species' niche. Each generation, a species can speciate (produce a daughter species). Speciation is assumed to be budding. Daughter species inherit the parents trait +/- 1. This assumes daughter species occupy a niche close to it's parent. Each generation, the order in which species attempt to speciate is randomised. If a species attempts to speciate, yet the daughter lineage would occupy an already occupied niche, speciation does not occur. If the niche of a species becomes occupied before the species can attempt to speciate, that species instead becomes exitinct. Users can optionally specify a mass extinction using the ext logical argument. The mass extinction will occur at the generation specied by the user using the ext_t argument. The number of lineages that become extinct at the mass extinction interval is equal to the number of currently extant species * the mass extinction severity (ext_s), rounded to the nearest integer. Lineages that become extinct are determined randomly. The sim_g_tree() function effectively simulates a process whereby the extinction rate at any given time is proportional to the number of extant species at that time. Becuase of this, it produces tree topologies quite unlike those of birth-death trees. Trees produced by sim_g_tree() tend to be more asymmetrical (unbalanced) and have a higher proportion of extinct lineages. Diversification occurs linearly, rather than exponentially.
}
\examples{
## Simulate a tree of approx. 200 taxa
t1 <- sim_g_tree(b = 0.2, n = 200, t = 100000, ext = F)
plot(ladderize(t1), show.tip.label = F, direction = "upwards", no.margin = T)
## Simulate a tree of 200 generations, with no extinction.
set.seed(1)
t2 <- sim_g_tree(b = 0.2, n = 10000, t = 200, ext = F)
plot(ladderize(t2), show.tip.label = F, direction = "upwards", no.margin = T)
## Simulate a tree of 200 generations, with a mass extinction at gen 100.
set.seed(1)
t3 <- sim_g_tree(b = 0.2, n = 10000, t = 200, ext = T, ext_t = 100, ext_s = 0.9)
plot(ladderize(t3), show.tip.label = F, direction = "upwards", no.margin = T)

}
